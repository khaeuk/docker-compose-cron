version: '3'

services:
    myapp:
        hostname: myapp
        build: .
        container_name: myapp
        command: > 
            sh -c "python manage.py makemigrations
            && python manage.py migrate 
            && python manage.py runserver 0.0.0.0:8000"
        ports:
            - 8000:8000
        volumes:
            - cron-content:/src/cron
            - ./:/src/testcron
        networks: 
            - dockernetwork
        depends_on:
            - mycron
        restart: always

    guestapp:
        hostname: guestapp
        build:
            context: .
            dockerfile: guest.Dockerfile
        container_name: guestapp
        command: >
            bash -c "service ssh start && tail -f /dev/null"
        networks:
            - dockernetwork
        depends_on:
            - mycron
        restart: always
        
    # mycron:
    #     hostname: mycron
    #     image: docker:edge
    #     container_name: mycron
    #     command: >
    #         tail -f /dev/null
    #     volumes:
    #         - /var/run/docker.sock:/var/run/docker.sock
    #     networks:
    #         - dockernetwork
    #     restart: always
        
    mycron:
        hostname: mycron
        build:
            context: .
            dockerfile: cron.Dockerfile
        container_name: mycron
        # command: >
        #     bash -c "service ssh start && tail -f /dev/null"
        volumes:
            - cron-content:/mycron_output
        networks: 
            - dockernetwork
        restart: always

volumes:
    cron-content: {}
          
networks:
    dockernetwork:
        driver: bridge
            


    